const body=document.body;const time=document.getElementById("time");const startButton=document.getElementById("startButton");const pauseButton=document.getElementById("pauseButton");const resetButton=document.getElementById("resetButton");const arrowsToChangeTimer=document.querySelectorAll(".arrow");const currentProgress=document.getElementById("currentProgress");const defaultMinutes=25;let totalTime=getDisplayedTimeInSeconds();let timeToRun=getDisplayedTimeInSeconds();let breakToRun=300;let runTime=0;let runningClock=null;let runningBreak=null;startButton.addEventListener("click",function(){toggleButton(this.id);hideArrows();if(runningClock===null){runClock();body.style.backgroundColor="LightGreen"}else{runBreak()}});pauseButton.addEventListener("click",function(){if(runningClock||runningBreak){toggleButton(this.id);pauseClock();showArrows();body.style.backgroundColor="LightSalmon"}});resetButton.addEventListener("click",function(){resetAll(this)});function resetAll(e){let t=defaultMinutes*60;toggleButton(e.id);pauseClock();showArrows();updateTimeDisplayed(t);totalTime=timeToRun=t;breakToRun=300;runningClock=runningBreak=null;runTime=currentProgress.style.width=0;body.style.backgroundColor="White"}arrowsToChangeTimer.forEach(e=>{const t=()=>changeTimer(e);e.addEventListener("click",t)});function hideArrows(){arrowsToChangeTimer.forEach(e=>{e.style.visibility="hidden"})}function showArrows(){arrowsToChangeTimer.forEach(e=>{e.style.visibility="visible"})}function toggleButton(e){switch(e){case"startButton":startButton.disabled=true;pauseButton.disabled=false;break;case"pauseButton":startButton.disabled=false;pauseButton.disabled=true;break;case"resetButton":startButton.disabled=false;pauseButton.disabled=false;break}}function runClock(){runningClock=setInterval(function(){countDown();updateProgressBar()},1e3);currentProgress.style.backgroundColor="DarkGreen"}function countDown(){timeToRun-=1;runTime++;updateTimeDisplayed(timeToRun);if(timeToRun===0){clearInterval(runningClock);updateTimeDisplayed(breakToRun);runBreak()}}function runBreak(){runningBreak=setInterval(function(){breakToRun-=1;updateTimeDisplayed(breakToRun);if(breakToRun===0){clearInterval(runningBreak);resetAll()}},1e3);body.style.backgroundColor="Orange";currentProgress.style.backgroundColor="DarkOrange"}function pauseClock(){clearInterval(runningClock);clearInterval(runningBreak);currentProgress.style.backgroundColor="DarkRed"}function changeTimer(e){switch(e.id){case"increase-by-one":updateTimeDisplayed(addMinute());break;case"increase-by-five":updateTimeDisplayed(addMinute(5));break;case"decrease-by-one":updateTimeDisplayed(removeMinute());break;case"decrease-by-five":updateTimeDisplayed(removeMinute(5));break}}function updateTimeDisplayed(e){let t=returnTimeInParts(e);time.innerText=t.minutes+":"+t.seconds}function addMinute(e=1){let t=getDisplayedTimeInSeconds();if(t<3660-e*60){t+=60*e;totalTime+=60*e;timeToRun+=60*e;updateProgressBar()}return t}function removeMinute(e=1){let t=getDisplayedTimeInSeconds();if(t>60*e){t-=60*e;totalTime-=60*e;timeToRun-=60*e;updateProgressBar()}return t}function justifySingleDigits(e){if(e<10){e="0"+e}return e}function returnTimeInParts(e){let t=Math.floor(e%60);let n=Math.floor(e/60%61);return{seconds:justifySingleDigits(t),minutes:justifySingleDigits(n)}}function getDisplayedTimeInSeconds(){let e=document.getElementById("time").innerText.match(/^\d+/);let t=document.getElementById("time").innerText.match(/\d+$/);return Number(e)*60+Number(t)}function updateProgressBar(){let e=getProgressPercent(runTime);setProgressBarWidth(e)}function getProgressPercent(e){return e/totalTime*100}function setProgressBarWidth(e){currentProgress.style.width=e+"%"}